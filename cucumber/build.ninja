builddir=./build
mask_subcommand = --help

#######################################
# begin: rule in template

rule mask
  command = mask $mask_subcommand

rule mask-tee
  command = mask --maskfile $in $mask_subcommand 2>&1 | tee $out 1> /dev/null

rule mask-screenshot
  command = $
    regular_logfile="./build/temp/$$(basename $out).mask-screenshot.logfile" && $
    rm -f -v "$${regular_logfile}" && $
    until [[ -s "$${regular_logfile}" ]]; do $
      screen_logfile="$$(mktemp -d)/logfile"; $
      echo "$${screen_logfile}"; $
      mkfifo "$${screen_logfile}"; $
      screen -L -Logfile "$${screen_logfile}" $
        -dmS mask-screenshot-"$$(basename $out)" $
        sh -c "stdbuf -o0 mask --maskfile $in $mask_subcommand; $
          date +'%F %T %Z %z - %+ https://github.com/huzhenghui' | lolcat;"; $
      dd bs=1 if="$${screen_logfile}" of="$${regular_logfile}"; $
    done && $
    ansifilter --html --encoding=utf8 --input="$${regular_logfile}" | $
      tee ./build/temp/"$$(basename $out)".mask-screenshot.html | $
      wkhtmltoimage --format png - "$out"

rule pandocomatic
  command = pandocomatic --input $in --output $out

rule ghq
  command = ghq get --update "$repository" && $
    find -d "$link_dirname" -exec rmdir {} \; && $
    ln -Fs "$$(ghq list --full-path $repository)" "$link_dirname"
  generator = 1

rule github-markdown-toc
  command = gh-md-toc --hide-header --hide-footer --no-escape $in > $out

rule copy_alternate
  command = if [[ -f "$alternate" ]]; $
    then $
      cp "$alternate" "$out"; $
    else $
      cp "$in" "$out"; $
    fi;

# end: rule in template
#######################################

#######################################
# start snippet custom-rule

rule mask-stdout-tee
  command = mask --maskfile $in $mask_subcommand 2>/dev/null | tee $out 1> /dev/null

# end snippet custom-rule
#######################################

#######################################
# begin: build in template

build ./build/ninja.README.md.dot : mask-tee ./maskfile.md
  mask_subcommand = readme-graph-dot

build ./build/ninja.README.md.png : mask | ./build/ninja.README.md.dot
  mask_subcommand = readme-graph-png

build ./build/pandoc-lua-filters/include-files/include-files.lua : ghq
  repository = https://github.com/pandoc/lua-filters
  link_dirname = ./build/pandoc-lua-filters

build ./build/temp/README.md : copy_alternate ./maskfile.md
  alternate = ./README.md

build ./build/README.TOC.md : github-markdown-toc ./build/temp/README.md

# end: build in template
#######################################

#######################################
# start snippet custom-build

build ./build/cucumber-help-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-help

build ./build/cucumber-version-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-version

build ./build/cucumber-i18n-languages-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-i18n-languages

build ./build/cucumber-i18n-keywords-zh-CN-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-i18n-keywords-zh-CN

build ./build/cucumber-pretty-dry-run-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-pretty-dry-run

build ./build/cucumber-pretty-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-pretty

build ./build/cucumber-summary-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-summary

build ./build/cucumber-summary-dry-run-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-summary-dry-run

build ./build/cucumber-progress-dry-run-output.txt : mask-tee ./maskfile.md
  mask_subcommand = cucumber-progress-dry-run

build ./build/junit/TEST-features-ejdb.xml : mask ./maskfile.md
  mask_subcommand = cucumber-junit

build ./build/cucumber-stepdefs-output.txt : mask-stdout-tee ./maskfile.md
  mask_subcommand = cucumber-stepdefs

build ./build/cucumber-stepdefs-dry-run-output.txt : mask-stdout-tee ./maskfile.md
  mask_subcommand = cucumber-stepdefs-dry-run

build ./build/cucumber-usage-output.txt : mask-stdout-tee ./maskfile.md
  mask_subcommand = cucumber-usage

build ./build/cucumber-usage-dry-run-output.txt : mask-stdout-tee ./maskfile.md
  mask_subcommand = cucumber-usage-dry-run
# end snippet custom-build
#######################################

#######################################
# begin: build README.md
# $ followed by a newline
# escape the newline (continue the current line across a line break).
# the first 4 line in this build is template
build README.md : pandocomatic maskfile.md | $
  build.ninja $
  ./build/ninja.README.md.dot $
  ./build/ninja.README.md.png $
  ./build/pandoc-lua-filters/include-files/include-files.lua $
  ./build/README.TOC.md $
  ./build/cucumber-help-output.txt $
  ./build/cucumber-version-output.txt $
  ./build/cucumber-i18n-languages-output.txt $
  ./build/cucumber-i18n-keywords-zh-CN-output.txt $
  ./build/cucumber-pretty-dry-run-output.txt $
  ./build/cucumber-pretty-output.txt $
  ./build/cucumber-summary-output.txt $
  ./build/cucumber-summary-dry-run-output.txt $
  ./build/cucumber-progress-dry-run-output.txt $
  ./build/junit/TEST-features-ejdb.xml $
  ./build/cucumber-stepdefs-output.txt $
  ./build/cucumber-stepdefs-dry-run-output.txt $
  ./build/cucumber-usage-output.txt $
  ./build/cucumber-usage-dry-run-output.txt

default README.md
# end: build README.md
#######################################
